{"version":3,"sources":["components/VideBackground/code.mp4","components/SideBarr/SideBarr.js","components/SideBarr/SideBarrbutton.js","components/Toolbar/Toolbar.js","components/fondo/Fondo.js","components/VideBackground/VideoBackground.js","components/Resume/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SideBarr","props","barraClasses","show","className","href","SideBarrButton","onClick","click","toolbar","SideBarrbutton","clickHandler","Fondo","VideoBackground","autoPlay","loop","muted","src","video","type","Resume","id","App","state","sideBarrOpen","setState","prevState","fondoClickHandler","fondo","this","style","height","marginTop","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,kC,wRCmB5BC,G,MAfE,SAAAC,GACb,IAAIC,EAAe,YAIpB,OAHID,EAAME,OACLD,EAAc,kBAGlB,yBAAKE,UAAWF,GACZ,4BACI,4BAAI,uBAAGG,KAAK,WAAR,cACJ,4BAAI,uBAAGA,KAAK,kCAAR,gBCADC,G,MATQ,SAAAL,GAAK,OACxB,4BAAQG,UAAU,SAASG,QAASN,EAAMO,OACtC,yBAAKJ,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,oBCkBRK,G,MApBC,SAAAR,GAAK,OACjB,4BAAQG,UAAU,WACd,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,iBACX,kBAACM,EAAD,CAAgBF,MAAOP,EAAMU,gBAEjC,yBAAKP,UAAU,iBAAgB,uBAAGC,KAAK,KAAR,iBAC/B,yBAAKD,UAAU,WACf,yBAAKA,UAAU,8BACX,4BACI,4BAAK,uBAAGC,KAAK,WAAR,aACL,4BAAK,uBAAGA,KAAK,kCAAR,kBCVVO,G,MAJD,SAAAX,GAAK,OACf,yBAAKG,UAAU,QAAQG,QAASN,EAAMO,U,gBCmB3BK,G,MApBS,SAAAZ,GAAK,OAE3B,yBAAKG,UAAU,QACX,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,cACX,2BAAQU,UAAQ,EAACC,MAAI,EAACC,OAAK,GAAC,4BAAQC,IAAKC,IAAOC,KAAK,gBAEzD,yBAAKf,UAAU,mBACf,yBAAKA,UAAU,kBACX,8CACA,8QCsBGgB,G,MAjCA,SAAAnB,GAAK,OAChB,yBAAKG,UAAU,OAAOiB,GAAG,UACrB,4EACA,8TAGA,gTAIA,qGAGA,8MAEA,0UAKA,0QAIA,0RAIA,6DCYOC,E,2MAlCbC,MAAO,CACLC,cAAc,G,EAEhBb,aAAe,WACb,EAAKc,UAAS,SAACC,GACb,MAAO,CAACF,cAAcE,EAAUF,kB,EAIpCG,kBAAoB,WAClB,EAAKF,SAAS,CAACD,cAAa,K,wEAI5B,IAAII,EAKJ,OAHGC,KAAKN,MAAMC,eACZI,EAAO,kBAAE,EAAF,CAAQpB,MAAOqB,KAAKF,qBAG3B,yBAAKG,MAAO,CAACC,OAAO,SAClB,kBAAE,EAAF,CAAUpB,aAAckB,KAAKlB,eAC7B,kBAAE,EAAF,CAAWR,KAAM0B,KAAKN,MAAMC,eAC3BI,EACD,0BAAME,MAAO,CAACE,UAAU,SACtB,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GA3BQC,aCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5b8f91e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/code.15bfee50.mp4\";","import React from 'react';\r\n\r\nimport './SideBarr.css';\r\n\r\nconst SideBarr = props => {\r\n    let barraClasses = 'side-barr';\r\n    if(props.show){\r\n        barraClasses ='side-barr open';\r\n    }\r\n   return( \r\n    <nav className={barraClasses} >\r\n        <ul>\r\n            <li><a href=\"#resume\">Who i am </a></li>\r\n            <li><a href=\"mailto:aldacor2011@hotmail.com\">Contact</a></li>\r\n        </ul>\r\n    </nav>\r\n   );\r\n };\r\n\r\nexport default SideBarr;","import React from 'react';\r\n\r\nimport './sideBarrbutton.css';\r\n\r\nconst SideBarrButton = props => (\r\n    <button className=\"button\" onClick={props.click}>\r\n        <div className=\"button__line\"/>\r\n        <div className=\"button__line\"/>\r\n        <div className=\"button__line\"/>\r\n\r\n    </button>\r\n);\r\n\r\nexport default SideBarrButton;","import React from 'react';\r\n\r\nimport SideBarrbutton from '../SideBarr/SideBarrbutton';\r\n\r\nimport './Toolbar.css';\r\n\r\nconst toolbar = props => (\r\n    <header className=\"toolbar\">\r\n        <nav className=\"toolbar__navigation\">\r\n            <div className=\"toggle_button\">\r\n                <SideBarrbutton click={props.clickHandler}/>\r\n            </div>\r\n            <div className=\"toolbar__logo\"><a href=\"/\">PRESENTATION</a></div>\r\n            <div className=\"spacer\"/>\r\n            <div className=\"toolbar__navigation__items\">\r\n                <ul>\r\n                    <li ><a href=\"#resume\" >Who i am</a></li>\r\n                    <li ><a href=\"mailto:aldacor2011@hotmail.com\">Contact</a></li>\r\n\r\n                </ul>\r\n            </div>\r\n            \r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport './Fondo.css';\r\n\r\nconst Fondo = props => (\r\n    <div className=\"Fondo\" onClick={props.click}/>\r\n);\r\n\r\nexport default Fondo;","import React from 'react';\r\nimport video from './code.mp4'\r\nimport './VideoBackground.css';\r\nconst VideoBackground = props => (\r\n  \r\n  <div className=\"body\">\r\n      <div className=\"header conteiner\">\r\n        <div className=\"video_wrap\">\r\n            <video  autoPlay loop muted><source src={video} type=\"video/mp4\"/></video>\r\n        </div>\r\n        <div className=\"header-overlay\"></div>\r\n        <div className=\"header_content\">\r\n            <h1>Hello Everyone</h1>\r\n            <p>If you are reading this i have probably sent you my resume, \r\n              i had the idea to presenting myself here in a more fancy way, \r\n              and to show my skills in programing and front-end a bit.\r\n              Please resize the brawser to see how it response...    </p>\r\n        </div>\r\n      </div> \r\n    </div>\r\n    \r\n);\r\n\r\nexport default VideoBackground;\r\n","import React from 'react';\r\nimport './Resume.css';\r\nconst Resume = props =>(\r\n    <div className=\"cont\" id=\"resume\">\r\n        <h1>Who i am, knowlage, technology and skills...</h1>\r\n        <p>Object oriented programing: Python and a bit of java. Classes-based with object as instances.Inheritance and encapsulation/closures techniques.\r\n            Object Relational Mapping; a pattern design which consist in perform queries to an SQL databes through objects and perform the data taken from.\r\n        </p>\r\n        <p>\r\n          Javascript: ES6; high order funtions, funtional and OOP[class and constructor], arrow funtions,Scope of variables and closures.\r\n          DOM manipulation and eventlisten, AJAx engines request, JSON and REST APIs. Currently learning frameworks[React, React Native, Node and express].  \r\n        </p>\r\n        <p>\r\n          Html and CSS; advanced, Responsive web design, navbars, DOM,Bootstrap.</p>\r\n           \r\n        <p>Others; MVC web architecture design, SQL database, GIT-github, good patters of coding style and habits. \r\n        Programming paradigms, web architecture network and internet protocols.</p>\r\n        <p>\r\n          Agile software methodologies: SCRUM[ product owner, scrum master and self organized teams,sprint backlog board, product backlog,sprint planning], \r\n          software project planning and development [analysis, design, coding and maintinance, planning all the proces to make the goals done with the resourses]-. \r\n          \r\n        </p>\r\n        <p>\r\n          English: pretty perfect writing and reading, a well technical vocabulary, a bit dificulty speaking out because\r\n          i don't practice oftentimes but i can keep a conversation quit break, i can improve quickly then and that is one of my goals\r\n        </p>\r\n        <p>\r\n          I am looking for my first experience on the field with a full time job, i have some experience making smalls jobs as frelancer \r\n          and to small business. I like technology and i love to learn new stuffs, im excited to entry on the field and keep learning.\r\n        </p>\r\n        <p>THANKS YOU FOR READ THIS!!!</p>\r\n    </div>\r\n    \r\n);\r\n\r\nexport default Resume;","import React, {Component} from 'react';\nimport SideBarr from './components/SideBarr/SideBarr';\nimport Toolbar from './components/Toolbar/Toolbar';\nimport Fondo from './components/fondo/Fondo';\nimport VideoBackground from './components/VideBackground/VideoBackground';\nimport Resume from './components/Resume/Resume';\n\nclass App extends Component {\n  state= {\n    sideBarrOpen: false\n  };\n  clickHandler = () => {\n    this.setState((prevState)=>{\n      return {sideBarrOpen:!prevState.sideBarrOpen}\n    });\n  };\n\n  fondoClickHandler = () => {\n    this.setState({sideBarrOpen:false})\n  };\n\n  render(){ \n    let fondo;\n\n    if(this.state.sideBarrOpen){\n      fondo= < Fondo click={this.fondoClickHandler}/>;\n    }\n    return(\n      <div style={{height:'100%'}}>\n        < Toolbar clickHandler={this.clickHandler}/>\n        < SideBarr show={this.state.sideBarrOpen}/>\n        {fondo}\n        <main style={{marginTop:'56px'}}>\n          <VideoBackground/>\n          <Resume/>\n\n        </main>\n      </div>\n    );\n    }\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}